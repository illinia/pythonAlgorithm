"""
1. 문제 이해
    1. 설명
        * 절댓값 힙을 구현하라. 절댓값이 가장 작은 값이 여러개일 때는 가장 작은 수를 출력하고 배열에서 제거
        * N 이 입력으로 주어지고 N 개의 줄에 연산에 대한 정보를 나타내는 정수 x가 주어진다.
        * x 가 0 이 아니라면 배열에 x 라는 값을 추가, 0 이라면 절댓값이 가장 작은 값을 출력하고 배열에서 제거
        * 빈 배열인데 값을 출력하라하면 0을 출력
    2. 제약사항
        * 1 <= N <= 100,000
        * -2^31 <= x < 2^31 -> int 로 해결 가능
2. 접근 방법
    * 파이썬 내장 힙을 만드는데 힙에 들어가는 요소를 튜플로 하고 튜플의 첫번째 요소는 넣을 값의 절댓값, 두번째는 해당 값
    * 절댓값이 가장 작은 값이 여러개인 경우 가장 작은 수를 출력하라 했는데 파이썬 기본 힙은 튜플에서 첫 번째 요소가 같으면 두번째 요소를 비교한다.
3. 코드 설계
    1. N 입력, 힙 저장
    2. N 반복
        1. x 입력
        2. x 가 0 이라면, 힙의 길이를 체크하고 0 이상이면 pop 출력, 아니면 0 출력
        3. 아니라면, 힙에 튜플로 (절댓값, 원래값) 형태로 push
"""
import sys
import heapq

input = sys.stdin.readline
N = int(input())
h = []

for _ in range(N):
    x = int(input())

    if x == 0:
        print(heapq.heappop(h)[1] if len(h) > 0 else 0)
    else:
        heapq.heappush(h, (abs(x), x))