"""
1. 문제 이해
    1. 설명
        * 괄호가 주어지고 괄호가 닫히면 레이저를 발사한다.
          괄호가 열리고 닫히는 부분이 쇠막대기의 끝 점이다.
    2. 제약 사항
        * 괄호 문자의 갯수는 최대 100,000
2. 접근 방법
    * 괄호 문자 길이가 시간 복잡도에 영향을 끼친다.
      O(NlogN) 까지의 복잡도로 풀 수 있다.
    * 순서가 중요하기 때문에 정렬은 의미 없다.
    * 이미지로 생각했을 때 괄호가 열리고 닫히는 구조가 스택과 유사하다.
      스택으로 해결시 전체 문자열 순회하는 시간 O(N) 로 해결 가능하다.
    * 여는 괄호를 만나면 스택에 푸시해주고
      닫는 괄호를 만나면 전 문자가 (스택에서 팝한 결과가) x (해당 문자의 전 문자를 문자열에서 찾아야 한다. 스택에서 찾을 경우 파이프 끝임에도 스택에 열린 괄호가 남아있기 때문에 레이저로 인식됨)
      여는 괄호면(레이저면) 해당 깊이만큼 결과에 더해주고
      닫는 괄호면(파이프 끝이면) 1을 더해준다.(밑의 파이프들은 다음에 나올 레이저나 파이프 끝에서 더해주기 때문에 해당 깊이의 파이프만 신경쓰면 된다.)
3. 코드 설계
    1. 결과값, 스택 생성
    2. 문자열 스택에 입력
        1. 열린 괄호가 나올 시 스택에 넣어주고
        2. 닫힌 괄호가 나올 시 스택에서 pop해주고 결과가
            1. 여는 괄호면(레이저면) 스택 깊이만큼 결과에 더해준다.
            2. 닫는 괄호면(파이프 끝이면) 1을 더해준다.
        3. 결과값 반환
"""

# 1.
result = 0
stack = []

# 2.
data = input()
for i, d in enumerate(data):
    # 1.
    if d == '(':
        stack.append(d)
    # 2.
    else:
        p = stack.pop()
        # 1.
        if data[i - 1] == '(':
            result += len(stack)
        # 2.
        else:
            result += 1

print(result)
