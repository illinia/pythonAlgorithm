"""
1. 문제 이해
    1. 설명
        * 1이 쓰여진 타일과 00으로 쓰여진 2장의 타일이 하나로 있다
        * N 개의 이진 수열을 만들때 1과 00타일을 사용하고 가짓수를 반환
    2. 제약사항
        * 1 <= N <= 1,000,000
        * 출력시 15746으로 나눈 나머지 출력
2. 접근 방법
    * 예시
        N == 1 1
        N == 2 00, 11
        N == 3 001, 100, 111
        N == 4 0000, 1100, 1111, 0011, 1001
        N == 5 00100, 00111(중복), 10000, 10011(중복), 00001, 11001, 11111, 00111(중복), 10011(중복)
    * N - 2 경우에서 2개를 붙일 때 11은 N - 1 의 경우에도 들어갈 수 있으므로 N - 1 에서 0하나만 붙일 수 없으므로
      N - 2 경우에서 00을 붙이는 경우만 생각 -> N - 2 경우의 수
    * N - 1 에서 1만 붙이는 경우 생각 -> N - 1 경우의 수
    * 점화식은 dp[n] = dp[n - 1] + dp[n - 2], n == 1 -> 1, n == 2 -> 2
3. 코드 설계
    1. N 입력
    # 메모리 초과때문에 테이블은 사용 불가
    # 2. N + 1만큼의 dp 테이블 만들고 0으로 초기화, 1, 2 번째 dp 테이블 값 저장
    # 3. 3 부터 N 까지 반복
    #     1. 점화식을 코드로 만들어 dp 테이블에 적용
    # 4. dp 테이블 마지막 수의 15746 나머지 반환
    # 시간초과
    # 2. a, b 값을 1, 2 수로 저장
    # 3. 3 부터 N 까지 반복
    #     1. temp 에 a + b 값 저장하고
    #     2. a 에 b 저장
    #     3. b 에 temp 저장
    # 4. b 를 15746 나머지 출력
"""

N = int(input())
if N == 1:
    print(1)
elif N == 2:
    print(2)
else:
    dp = [0] * (N + 2)
    dp[1] = 1
    dp[2] = 2
    for i in range(3, N + 2):
        dp[i] = (dp[i - 1] + dp[i - 2]) % 15746
    print(dp[N])
# a, b = 1, 2
# for i in range(3, N + 1):
#     temp = a + b
#     a = b % 15746
#     b = temp % 15746
# print(b % 15746)
