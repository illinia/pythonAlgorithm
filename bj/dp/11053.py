"""
1. 문제 이해
    1. 설명
        * 가장 긴 증가하는 부분 수열을 구하라
        * 모든 수열 요소들중에서 비연속적으로 증가하는 부분 수열중 가장 긴 것
    2. 제약사항
        * 1 <= N 수열 크기 <= 1,000
        * 1 <= 수열 요소 크기 <= 1,000
2. 접근 방법
    * 순서에 상관이 있다.
    * 현재 값 이전의 값들을 반복해서, 현재 값보다 작은 값들의 부분 수열 최대값을 현재 부분 수열 최대값과 비교해서 큰 값을 넣어준다.(2중 반복)
3. 코드 설계
    1. 수열 크기 N 입력, 수열 리스트 입력
    2. dp 리스트(부분 수열 길이 최대값 리스트, 첫 번째 값은 수열 첫 번째 값)
    3. 수열 리스트 반복(2번째 요소부터)
        1. 현재 값 이전의 값들을 반복하기 위해 첫 번째 값부터 현재 값 이전 값까지 반복
            1. 현재 값이 이전 값보다 크면, dp 리스트 현재 값에 현재 최대값과 이전 최대값중 큰 값 + 1을 넣어주면 된다.
    4. 최대값 리스트에서 최대값 반환
"""

from sys import stdin

# 1
N = int(stdin.readline())
numbers = list(map(int, stdin.readline().split()))

# 2
dp = [1] * N

# 3
for i in range(1, N):
    for j in range(i):
        if numbers[i] > numbers[j]:
            dp[i] = max(dp[i], dp[j] + 1)

print(max(dp))